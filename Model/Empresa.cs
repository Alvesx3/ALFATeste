namespace ALFA.Model
{
    // <auto-generated />
    //
    // To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
    //
    //    using Empresa;
    //
    //    var welcome = Welcome.FromJson(jsonString);

    namespace Empresa
    {
        using System;
        using System.Collections.Generic;

        using System.Globalization;
        using Newtonsoft.Json;
        using Newtonsoft.Json.Converters;

        public partial class Welcome
        {
            [JsonProperty("total")]
            public long Total { get; set; }

            [JsonProperty("has_more")]
            public bool HasMore { get; set; }

            [JsonProperty("organizations")]
            public Organization[] Organizations { get; set; }
        }

        public partial class Organization
        {
            [JsonProperty("_id")]
            public string Id { get; set; }

            [JsonProperty("id")]
            public string OrganizationId { get; set; }

            [JsonProperty("name")]
            public string Name { get; set; }

            [JsonProperty("resume")]
            public string Resume { get; set; }

            [JsonProperty("url")]
            public Uri Url { get; set; }

            [JsonProperty("address")]
            public object Address { get; set; }

            [JsonProperty("won_count")]
            public long WonCount { get; set; }

            [JsonProperty("lost_count")]
            public long LostCount { get; set; }

            [JsonProperty("opened_count")]
            public long OpenedCount { get; set; }

            [JsonProperty("paused_count")]
            public long PausedCount { get; set; }

            [JsonProperty("created_at")]
            public DateTimeOffset CreatedAt { get; set; }

            [JsonProperty("updated_at")]
            public DateTimeOffset UpdatedAt { get; set; }

            [JsonProperty("organization_segments")]
            public OrganizationSegment[] OrganizationSegments { get; set; }

            [JsonProperty("user")]
            public User User { get; set; }

            [JsonProperty("contacts")]
            public Contact[] Contacts { get; set; }

            [JsonProperty("custom_fields")]
            public object[] CustomFields { get; set; }
        }

        public partial class Contact
        {
            [JsonProperty("name")]
            public string Name { get; set; }

            [JsonProperty("title")]
            public object Title { get; set; }

            [JsonProperty("notes")]
            public object Notes { get; set; }

            [JsonProperty("facebook")]
            public object Facebook { get; set; }

            [JsonProperty("linkedin")]
            public object Linkedin { get; set; }

            [JsonProperty("skype")]
            public object Skype { get; set; }

            [JsonProperty("birthday")]
            public object Birthday { get; set; }

            [JsonProperty("emails")]
            public Email[] Emails { get; set; }

            [JsonProperty("phones")]
            public Phone[] Phones { get; set; }
        }

        public partial class Email
        {
            [JsonProperty("email")]
            public string EmailEmail { get; set; }
        }

        public partial class Phone
        {
            [JsonProperty("phone")]
            public string PhonePhone { get; set; }

            [JsonProperty("type")]
            public string Type { get; set; }
        }

        public partial class OrganizationSegment
        {
            [JsonProperty("_id")]
            public string Id { get; set; }

            [JsonProperty("id")]
            public string OrganizationSegmentId { get; set; }

            [JsonProperty("name")]
            public string Name { get; set; }

            [JsonProperty("integration_id")]
            public object IntegrationId { get; set; }

            [JsonProperty("created_at")]
            public DateTimeOffset CreatedAt { get; set; }

            [JsonProperty("updated_at")]
            public DateTimeOffset UpdatedAt { get; set; }
        }

        public partial class User
        {
            [JsonProperty("_id")]
            public string Id { get; set; }

            [JsonProperty("id")]
            public string UserId { get; set; }

            [JsonProperty("name")]
            public string Name { get; set; }

            [JsonProperty("nickname")]
            public string Nickname { get; set; }

            [JsonProperty("email")]
            public string Email { get; set; }
        }

        public partial class Welcome
        {
            public static Welcome FromJson(string json) => JsonConvert.DeserializeObject<Welcome>(json, Empresa.Converter.Settings);
        }

        public static class Serialize
        {
            public static string ToJson(this Welcome self) => JsonConvert.SerializeObject(self, Empresa.Converter.Settings);
        }

        internal static class Converter
        {
            public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
            {
                MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
                DateParseHandling = DateParseHandling.None,
                Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
            };
        }
    }

}
